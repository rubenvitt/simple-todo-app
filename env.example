# =================================================================
# Todo App Environment Configuration
# =================================================================
# Copy this file to .env and adjust values for your environment

# Application Environment
NODE_ENV=development
PORT=3000

# JWT Configuration (REQUIRED)
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
JWT_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d

# Database Configuration (REQUIRED)
DATABASE_URL=postgresql://user:password@localhost:9001/todo_db
DATABASE_POOL_SIZE=10
DATABASE_CONNECTION_LIMIT=100
DATABASE_TIMEOUT=30000
DATABASE_BATCH_SIZE=10
DATABASE_MAX_RETRIES=3
DATABASE_RETRY_DELAY=1000

# Frontend/CORS Configuration  
FRONTEND_URL=http://localhost:3000,http://localhost:5173
CORS_ORIGIN=http://localhost:3000,http://localhost:5173
API_URL=http://localhost:3000

# Advanced CORS Configuration (Production)
CORS_CREDENTIALS=true
CORS_METHODS=GET,POST,PUT,DELETE,PATCH,OPTIONS
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With
CORS_EXPOSED_HEADERS=Content-Length,Content-Type
CORS_MAX_AGE=86400
CORS_ALLOW_NO_ORIGIN=false
CORS_ALLOW_PATTERNS=false
CORS_PATTERNS=

# Compression Configuration
COMPRESSION_LEVEL=6
COMPRESSION_THRESHOLD=1024

# Logging Configuration
LOG_LEVEL=info
LOG_FORMAT=json
# Available log levels: error, warn, info, debug, verbose
# In production: error or warn recommended
# In development: debug or info recommended

# Application Version (for logging)
APP_VERSION=1.0.0

# Rate Limiting
RATE_LIMIT_TTL=60000
RATE_LIMIT_MAX=100

# Security
ENCRYPTION_KEY=your-32-character-encryption-key-here

# Monitoring (Optional)
SENTRY_DSN=

# Cache (Optional)
REDIS_URL=

# AWS Configuration (Production secrets management)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=us-east-1
SECRETS_MANAGER_REGION=us-east-1

# HashiCorp Vault (Alternative secrets management)
VAULT_URL=
VAULT_TOKEN=

# =================================================================
# Development Notes:
# - JWT_SECRET should be at least 32 characters long
# - DATABASE_URL should point to your PostgreSQL instance
# - FRONTEND_URL should include all allowed frontend origins
# - In production, use AWS Secrets Manager or Vault for secrets
# 
# CORS Configuration:
# - CORS_ORIGIN: Comma-separated list of allowed origins
# - CORS_CREDENTIALS: Allow credentials in CORS requests (default: true)
# - CORS_METHODS: Allowed HTTP methods
# - CORS_ALLOWED_HEADERS: Headers client can send
# - CORS_EXPOSED_HEADERS: Headers exposed to client
# - CORS_MAX_AGE: Preflight cache duration in seconds
# - CORS_ALLOW_NO_ORIGIN: Allow requests with no origin header
# - CORS_ALLOW_PATTERNS: Enable regex pattern matching for origins
# - CORS_PATTERNS: Comma-separated regex patterns for origin matching
#
# Compression Configuration:
# - COMPRESSION_LEVEL: 0-9, where 0=no compression, 9=max compression
# - COMPRESSION_THRESHOLD: Min response size in bytes to compress
# ================================================================= 